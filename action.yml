name: 'Wait for message or send message'
description: 'Runs the wait-for-message Python utility (https://pypi.org/project/wait-for-message/)'
inputs:
  command:
    description: 'The command to execute; wait or send'
    required: True
  ip:
    description: 'For send; the IP address of the server'
    required: false
  port:
    description: 'For send; the TCP port number the server. For wait; the TCP port number to listen on'
    required: true
  message:
    description: 'For send; the message to send. For wait; the message to wait for'
    required: true
  delay:
    description: 'For send; the number of seconds to delay between retries'
    required: false
    default: 10
  attempts:
    description: 'For send; the maximum retry attempts'
    required: false
    default: 60
  timeout:
    description: 'For wait; the number of seconds to wait for message'
    required: false
    default: 900
  use_container:
    description: 'Use Docker container for execution'
    required: false
    default: false
  shell:
    description: 'The shell to use'
    required: false
    default: bash
outputs:
  response_linux:
    description: "Wait Response for Linux"
    value: ${{ steps.response_linux.outputs.response }}
  response_windows:
    description: "Wait Response for Windows"
    value: ${{ steps.response_windows.outputs.response }}
  response_container:
    description: "Wait Response for Container"
    value: ${{ steps.response_container.outputs.response }}
runs:
  using: "composite"
  steps:

    - name: Install wait-for-message
      if: ${{ inputs.use_container == 'false' }}
      shell: ${{ inputs.shell }}
      run: |
        pip3 install --upgrade wait-for-message

    - name: Send message
      if: ${{ inputs.command == 'send' && inputs.use_container == 'false' }}
      shell: ${{ inputs.shell }}
      run: |
        w4m send --ip-address=${{ inputs.ip }} --port-number=${{ inputs.port }} --message="${{ inputs.message }}" --delay=${{ inputs.delay }} --attempts=${{ inputs.attempts }}

    - name: Wait for message for Linux
      if: ${{ runner.os == 'Linux' && inputs.command == 'wait' && inputs.use_container == 'false' }}
      id: response_linux
      shell: bash
      run: |
        value=$( 
          w4m wait \
            --port-number=${{ inputs.port }} \
            --message="${{ inputs.message }}" \
            --timeout=${{ inputs.timeout }}
        )
        echo "response=$value" >> $GITHUB_OUTPUT
    
    - name: Wait for message for Windows
      if: ${{ runner.os == 'Windows' && inputs.command == 'wait' && inputs.use_container == 'false' }}
      id: response_windows
      shell: powershell
      run: |
        $value=(
          w4m wait `
            --port-number=${{ inputs.port }} `
            --message="${{ inputs.message }}" `
            --timeout=${{ inputs.timeout }}
        )
        Write-Output "response=$value" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        
    - name: Run using Docker container
      if: ${{ inputs.use_container == 'true' }}
      id: response_container
      shell: bash
      run: |
        ${{ github.action_path }}/run.sh
      env:
        W4M_COMMAND: ${{ inputs.command }}
        W4M_IP: ${{ inputs.ip }}
        W4M_PORT: ${{ inputs.port }}
        W4M_MESSAGE: ${{ inputs.message }}
        W4M_DELAY: ${{ inputs.delay }}
        W4M_ATTEMPTS: ${{ inputs.attempts }}
        W4M_TIMEOUT: ${{ inputs.timeout }}
